plugins {
	id 'fabric-loom'
	id 'maven-publish'
	id 'idea'
	id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = project.mod_version
group = project.maven_group

minecraft {
}

apply from: 'repositories.gradle'
apply from: 'dependencies.gradle'

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

archivesBaseName = "${project.archives_base_name}-${project.minecraft_version}"
libsDirName = "${project.outDir}" // Output location of 'jar / gradle build'

jar {
	from "LICENSE"
	manifest {
		attributes([
				"Title"     : "${project.archives_base_name}",
				"Version"   : "${version}",
				"Author"    : "${project.mod_author}",
				"Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

// Intellij IDEA config
// see https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.idea.model.IdeaModule.html
idea {
	module {
		//extra dirs that should be excluded by IDEA
		excludeDirs += file('gradle')
		excludeDirs += file('run')
		excludeDirs += file('out')

		//SDK for the IDEA project
		jdkName = '1.8'
	}
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

// Source files location, currently makes the source location for java and kotlin the same
sourceSets {
	main.kotlin.srcDirs += 'src/main'
	main.java.srcDirs += 'src/main'
}

/*
 * Tasks
*/
File configFile = file('gradle.properties')

// Increments the minor mod version by 1
task incrementVersion{
	doFirst {
		int lastdot = version.lastIndexOf('.')+1
		int minor=version.substring(lastdot).toInteger()+1
		String major=version.substring(0,lastdot)
		// Replace the mod version by the new one (+1)
		configFile.setText(configFile.getText()
				.replaceFirst("mod_version =.*", "mod_version = "+major+minor+"")
		)
	}
}

defaultTasks 'incrementVersion', 'build'